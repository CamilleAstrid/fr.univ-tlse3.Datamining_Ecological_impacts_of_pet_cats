setwd("/run/media/amouroux/CORSAIR/cours/fouille/Pojo/fr.univ-tlse3.Datamining_Ecological_impacts_of_pet_cats/datamining.project-master/data.preparation")
CatAus = read.csv("fr.univ-tlse3.Datamining_Ecological_impacts_of_pet_cats/datamining.project-master/data/Pet Cats Australia.csv")
CatAus = read.csv("/datamining.project-master/data/Pet Cats Australia.csv")
CatAus = read.csv("datamining.project-master/data/Pet Cats Australia.csv")
CatAus = read.csv("./data/Pet Cats Australia.csv")
CatAus = read.csv("../data/Pet Cats Australia.csv")
View(CatAus)
CatUS = read.csv("../data/Pet Cats United States.csv")
CatAus = read.csv("../data/Pet Cats Australia.csv")
CatUS = read.csv("../data/Pet Cats United States.csv")
CatUK = read.csv("../data/Pet Cats United Kindom.csv")
CatAus = read.csv("../data/Pet Cats Australia.csv"); summary(CatAus)
library(ade4);  library(tidyverse);  library(GGally)
summary(CatAus)
summary(CatAus)
summary(CatUS)
summary(CatUK)
summary(CatNZ)
CatUK = read.csv("../data/Pet Cats United Kindom.csv")
CatUK = read.csv("../data/Pet Cats United Kingdom.csv")
CatNZ = read.csv("../data/Pet Cats New Zealand.csv")
summary(CatAus)
summary(CatUS)
summary(CatUK)
summary(CatNZ)
View(CatNZ)
View(CatUK)
View(CatUS)
summary(CatAus)
summary(CatUS)
summary(CatUK)
summary(CatNZ)
CatAus = subset.data.frame(CatAus,
select = c("event.id","visible","timestamp","sensor.type","location.long","location.lat",
"algorithm.marked.outlier","manually.marked.outlier","individual.taxon.canonical.name",
"tag.local.identifier","individual.local.identifier","study.name"))
CatUS = subset.data.frame(CatUS,
select = c("event.id","visible","timestamp","sensor.type","location.long","location.lat",
"algorithm.marked.outlier","manually.marked.outlier","individual.taxon.canonical.name",
"tag.local.identifier","individual.local.identifier","study.name"))
CatUK = subset.data.frame(CatUK,
select = c("event.id","visible","timestamp","sensor.type","location.long","location.lat",
"algorithm.marked.outlier","manually.marked.outlier","individual.taxon.canonical.name",
"tag.local.identifier","individual.local.identifier","study.name"))
CatNZ = subset.data.frame(CatNZ,
select = c("event.id","visible","timestamp","sensor.type","location.long","location.lat",
"algorithm.marked.outlier","manually.marked.outlier","individual.taxon.canonical.name",
"tag.local.identifier","individual.local.identifier","study.name"))
CatComplet = merge.data.frame(CatAus, CatUS) %>% merge.data.frame(CatUK) %>% merge.data.frame(CatNZ)
View(CatComplet)
CatComplet = merge.data.frame(CatAus, CatUS, all.x = T, all.y= T)
CatComplet = merge.data.frame(CatAus, c(CatUS,CatUK,CatNZ),
all.x = T, all.y= T)
CatComplet = merge.data.frame(CatComplet, CatUK,
all.x = T, all.y= T)
CatComplet = merge.data.frame(CatComplet, CatNZ,
all.x = T, all.y= T)
summary(CatComplet)
CatComplet$algorithm.marked.outlier
which(CatComplet$algorithm.marked.outlier != "")
CatCompletwoOutliers = subset.data.frame(CatComplet, which(CatComplet$algorithm.marked.outlier != ""))
CatCompletwoOutliers = subset.data.frame(CatComplet, CatComplet$algorithm.marked.outlier != "")
CatCompletwoOutliers = subset.data.frame(CatComplet, CatComplet$algorithm.marked.outlier != "" | CatComplet$manually.marked.outlier != "")
CatCompletwoOutliers = subset.data.frame(CatComplet, CatComplet$algorithm.marked.outlier != "" || CatComplet$manually.marked.outlier != "")
CatCompletwoOutliers = subset.data.frame(CatComplet, CatComplet$algorithm.marked.outlier != "" | CatComplet$manually.marked.outlier != "")
CatCompletwoOutliers = subset.data.frame(CatComplet, CatComplet$algorithm.marked.outlier != "" | CatComplet$manually.marked.outlier != "")
View(CatCompletwoOutliers)
CatCompletwoOutliers = subset.data.frame(CatComplet, CatComplet$algorithm.marked.outlier != true | CatComplet$manually.marked.outlier != "")
CatCompletwoOutliers = subset.data.frame(CatComplet, CatComplet$algorithm.marked.outlier != "true" | CatComplet$manually.marked.outlier != "")
View(CatComplet)
unique(CatCompletwoOutliers$algorithm.marked.outlier)
CatCompletwoOutliers = subset.data.frame(CatComplet, CatComplet$algorithm.marked.outlier != "true" | CatComplet$manually.marked.outlier != "true" | CatComplet$algorithm.marked.outlier != ""|CatComplet$manually.marked.outlier != "")
CatCompletwoOutliers = subset.data.frame(CatComplet, CatComplet$algorithm.marked.outlier != "true" | CatComplet$manually.marked.outlier != "true")
unique(CatCompletwoOutliers$algorithm.marked.outlier)
CatCompletwoOutliers = subset.data.frame(CatComplet, CatComplet$algorithm.marked.outlier != "false" | CatComplet$manually.marked.outlier != "false")
unique(CatCompletwoOutliers$algorithm.marked.outlier)
unique(CatCompletwoOutliers$algorithm.marked.outlier);  unique(CatCompletwoOutliers$manually.marked.outlier)
CatCompletwoOutliers = subset.data.frame(CatComplet, CatComplet$algorithm.marked.outlier != "false" & CatComplet$manually.marked.outlier != "false")
unique(CatCompletwoOutliers$algorithm.marked.outlier);  unique(CatCompletwoOutliers$manually.marked.outlier)
CatCompletwoOutliers = subset.data.frame(CatComplet, CatComplet$algorithm.marked.outlier != "true" & CatComplet$manually.marked.outlier != "true")
unique(CatCompletwoOutliers$algorithm.marked.outlier);  unique(CatCompletwoOutliers$manually.marked.outlier)
summary(CatCompletwoOutliers)
CatAus = read.csv("../data/Pet Cats Australia.csv"
, stringsAsFactors = T)
CatUS = read.csv("../data/Pet Cats United States.csv"
, stringsAsFactors = T)
CatUK = read.csv("../data/Pet Cats United Kingdom.csv"
, stringsAsFactors = T)
CatNZ = read.csv("../data/Pet Cats New Zealand.csv"
, stringsAsFactors = T)
summary(CatAus)
summary(CatUS)
summary(CatUK)
summary(CatNZ)
summary(CatNZ)
Les seules variables communes a tous les tableaux :
summary(CatCompletwoOutliers)
View(CatCompletwoOutliers)
unique(CatCompletwoOutliers$algorithm.marked.outlier);  unique(CatCompletwoOutliers$manually.marked.outlier)
View(CatCompletwoOutliers)
CatCompletwoOutliers = CatCompletwoOutliers[,-7:8]
CatCompletwoOutliers = CatCompletwoOutliers[,-7:8]
CatCompletwoOutliers = CatCompletwoOutliers[,-7:-8]
# Chunk 1: setup
knitr::opts_chunk$set(fig.align="center", fig.width=6, fig.height=6, fig.path="Figs/", echo=TRUE, warning=FALSE, message=FALSE, cache=TRUE)
# Chunk 2
library(ade4);  library(tidyverse);  library(GGally)
# Chunk 3
CatAus = read.csv("../data/Pet Cats Australia.csv"
, stringsAsFactors = T)
CatUS = read.csv("../data/Pet Cats United States.csv"
, stringsAsFactors = T)
CatUK = read.csv("../data/Pet Cats United Kingdom.csv"
, stringsAsFactors = T)
CatNZ = read.csv("../data/Pet Cats New Zealand.csv"
, stringsAsFactors = T)
# Chunk 4
summary(CatAus)
summary(CatUS)
summary(CatUK)
summary(CatNZ)
# Chunk 5
CatAus = subset.data.frame(CatAus,
select = c("event.id","visible","timestamp","sensor.type","location.long","location.lat",
"algorithm.marked.outlier","manually.marked.outlier","individual.taxon.canonical.name",
"tag.local.identifier","individual.local.identifier","study.name"))
CatUS = subset.data.frame(CatUS,
select = c("event.id","visible","timestamp","sensor.type","location.long","location.lat",
"algorithm.marked.outlier","manually.marked.outlier","individual.taxon.canonical.name",
"tag.local.identifier","individual.local.identifier","study.name"))
CatUK = subset.data.frame(CatUK,
select = c("event.id","visible","timestamp","sensor.type","location.long","location.lat",
"algorithm.marked.outlier","manually.marked.outlier","individual.taxon.canonical.name",
"tag.local.identifier","individual.local.identifier","study.name"))
CatNZ = subset.data.frame(CatNZ,
select = c("event.id","visible","timestamp","sensor.type","location.long","location.lat",
"algorithm.marked.outlier","manually.marked.outlier","individual.taxon.canonical.name",
"tag.local.identifier","individual.local.identifier","study.name"))
# Chunk 6
CatComplet = merge.data.frame(CatAus, CatUS,
all.x = T, all.y= T)
CatComplet = merge.data.frame(CatComplet, CatUK,
all.x = T, all.y= T)
CatComplet = merge.data.frame(CatComplet, CatNZ,
all.x = T, all.y= T)
which(CatComplet$algorithm.marked.outlier != "")
CatCompletwoOutliers = subset.data.frame(CatComplet, CatComplet$algorithm.marked.outlier != "true" & CatComplet$manually.marked.outlier != "true")
# Chunk 7
unique(CatCompletwoOutliers$algorithm.marked.outlier);  unique(CatCompletwoOutliers$manually.marked.outlier)
# Chunk 8
CatCompletwoOutliers = CatCompletwoOutliers[,-7:-8] %>% CatCompletwoOutliers[,-1]
CatCompletwoOutliers = subset.data.frame(CatCompletwoOutliers,
select = c("visible","timestamp","sensor.type","location.long","location.lat",
"individual.taxon.canonical.name","tag.local.identifier","individual.local.identifier",
"study.name"))
View(CatCompletwoOutliers)
summary(CatCompletwoOutliers)
CatCompletwoOutliers = subset.data.frame(CatCompletwoOutliers,
select = c("location.long","location.lat",
"tag.local.identifier","study.name"))
summary(CatCompletwoOutliers)
CatAus = read.csv("../data/Pet Cats Australia.csv"
, stringsAsFactors = T)
CatUS = read.csv("../data/Pet Cats United States.csv"
, stringsAsFactors = T)
CatUK = read.csv("../data/Pet Cats United Kingdom.csv"
, stringsAsFactors = T)
CatNZ = read.csv("../data/Pet Cats New Zealand.csv"
, stringsAsFactors = T)
# Chunk 1: setup
knitr::opts_chunk$set(fig.align="center", fig.width=6, fig.height=6, fig.path="Figs/", echo=TRUE, warning=FALSE, message=FALSE, cache=TRUE)
# Chunk 2
library(ade4);  library(tidyverse);  library(GGally)
# Chunk 3
CatAus = read.csv("../data/Pet Cats Australia.csv"
, stringsAsFactors = T)
CatUS = read.csv("../data/Pet Cats United States.csv"
, stringsAsFactors = T)
CatUK = read.csv("../data/Pet Cats United Kingdom.csv"
, stringsAsFactors = T)
CatNZ = read.csv("../data/Pet Cats New Zealand.csv"
, stringsAsFactors = T)
# Chunk 4
summary(CatAus)
summary(CatUS)
summary(CatUK)
summary(CatNZ)
# Chunk 5
CatAus = subset.data.frame(CatAus,
select = c("event.id","visible","timestamp","sensor.type","location.long","location.lat",
"algorithm.marked.outlier","manually.marked.outlier","individual.taxon.canonical.name",
"tag.local.identifier","individual.local.identifier","study.name"))
CatUS = subset.data.frame(CatUS,
select = c("event.id","visible","timestamp","sensor.type","location.long","location.lat",
"algorithm.marked.outlier","manually.marked.outlier","individual.taxon.canonical.name",
"tag.local.identifier","individual.local.identifier","study.name"))
CatUK = subset.data.frame(CatUK,
select = c("event.id","visible","timestamp","sensor.type","location.long","location.lat",
"algorithm.marked.outlier","manually.marked.outlier","individual.taxon.canonical.name",
"tag.local.identifier","individual.local.identifier","study.name"))
CatNZ = subset.data.frame(CatNZ,
select = c("event.id","visible","timestamp","sensor.type","location.long","location.lat",
"algorithm.marked.outlier","manually.marked.outlier","individual.taxon.canonical.name",
"tag.local.identifier","individual.local.identifier","study.name"))
# Chunk 6
CatComplet = merge.data.frame(CatAus, CatUS,
all.x = T, all.y= T)
CatComplet = merge.data.frame(CatComplet, CatUK,
all.x = T, all.y= T)
CatComplet = merge.data.frame(CatComplet, CatNZ,
all.x = T, all.y= T)
which(CatComplet$algorithm.marked.outlier != "")
CatCompletwoOutliers = subset.data.frame(CatComplet, CatComplet$manually.marked.outlier != "true")
# si on fait confiance a leur algo ajouter : & CatComplet$algorithm.marked.outlier != "true"
# Chunk 7
unique(CatCompletwoOutliers$algorithm.marked.outlier);  unique(CatCompletwoOutliers$manually.marked.outlier)
# Chunk 8
CatCompletwoOutliers = subset.data.frame(CatCompletwoOutliers,
select = c("location.long","location.lat",
"tag.local.identifier","study.name"))
# Chunk 9
summary(CatCompletwoOutliers)
setwd("/run/media/amouroux/CORSAIR/cours/fouille/TP/TP1/tp.mushrooms.knime")
#cache = true ==> si a déja fait le calcule le refais pas car met tout dans le cache
setwd("/run/media/amouroux/CORSAIR/cours/fouille/TP/TP1/tp.mushrooms.knime")
setwd("/run/media/amouroux/CORSAIR/cours/fouille/Pojo/fr.univ-tlse3.Datamining_Ecological_impacts_of_pet_cats/datamining.project-master/data.preparation")
knitr::opts_chunk$set(fig.align="center", fig.width=6, fig.height=4, fig.path="Figs/", echo=TRUE, warning=FALSE, message=FALSE, cache=TRUE)
#cache = true ==> si a déja fait le calcule le refais pas car met tout dans le cache
setwd("/run/media/amouroux/CORSAIR/cours/fouille/TP/TP1/tp.mushrooms.knime")
library(tidyverse)
library(tidyverse)
```{r}
read_csv('./data/mushrooms.data.csv') %>% head
#read.csv('../../datamining/data/mushrooms.data.csv')
```
Mauvais format des colonnes (`character` au lieu de `factor`). cf. `?read_csv` pour spécifier le format par colonne. (c=character, i = integer, ...).
```{r}
tb <- read_csv('./data/mushrooms.data.csv')  %>% mutate_if(is.character, factor)
tb <- read_csv('./data/mushrooms.data.csv')  %>% mutate_if(is.character, factor)
#tb <- read.csv('../../datamining/data/mushrooms.data.csv', stringsAsFactors = T)
tb
## `summary` et autres fonctions de base si possible/pertinent
Première rencontre
on regarde les variables peu présentes :
tb <- tb %>% select(-veil.type)
table(tb$class, tb$cap.shape)
CatCompletwoOutliers %>%
select(class:study.name) %>%
ggpairs(aes(color=class), progress=F)
View(tb)
CatCompletwoOutliers %>%
select(study.name:cap.color) %>%
ggpairs(aes(color=class), progress=F)
View(tb)
CatCompletwoOutliers %>%
select(study.name:tag.local.identifier) %>%
ggpairs(aes(color=study.name), progress=F)
boxplot(CatCompletwoOutliers)
chisq.test(CatCompletwoOutliers)
summary(CatCompletwoOutliers)
plot(table(study.name~location.long+location.lat, data = CatCompletwoOutliers))
plot(table(study.name~location.long+location.lat)
, data = CatCompletwoOutliers)
plot(study.name~location.long+location.lat
, data = CatCompletwoOutliers)
plot(study.name~location.long
, data = CatCompletwoOutliers)
plot(study.name~location.long
, data = CatCompletwoOutliers,
col = c("red3","salmon2","blue4","coral1"))
CatCompletwoOutliers$study.name
unique(CatCompletwoOutliers$study.name)
plot(study.name~location.long
, data = CatCompletwoOutliers,
col = c("red3","salmon2","blue4","coral4"))
plot(study.name~location.long
, data = CatCompletwoOutliers,
col = study.name)
plot(study.name~location.long
, data = CatCompletwoOutliers,
col = c("red3","salmon2","blue4","coral4"))
plot(study.name~location.long
, data = CatCompletwoOutliers,
col = c("red3","salmon2","blue4","coral4"))
plot(study.name~location.long+location.lat
, data = CatCompletwoOutliers,
col = c("red3","salmon2","blue4","coral4"))
par(mfrow = c(1,2))
plot(study.name~location.long+location.lat
, data = CatCompletwoOutliers,
col = c("red3","salmon2","blue4","coral4"))
par(mfrow = c(1,2))
plot(study.name~location.long+location.lat
, data = CatCompletwoOutliers,
col = c("red3","salmon2","blue4","coral4"))
head(which(CatComplet$algorithm.marked.outlier != ""))
View(CatCompletwoOutliers)
View(CatComplet)
CatCompletwoOutliers = subset.data.frame(CatCompletwoOutliers,
select = c("location.long","location.lat","timestamp",
"tag.local.identifier","study.name"))
# Chunk 1: setup
knitr::opts_chunk$set(fig.align="center", fig.width=6, fig.height=6, fig.path="Figs/", echo=TRUE, warning=FALSE, message=FALSE, cache=TRUE)
# Chunk 2
library(ade4);  library(tidyverse);  library(GGally)
# Chunk 3
CatAus = read.csv("../data/Pet Cats Australia.csv"
, stringsAsFactors = T)
setwd("/run/media/amouroux/CORSAIR/cours/fouille/Pojo/fr.univ-tlse3.Datamining_Ecological_impacts_of_pet_cats/data.preparation")
# Chunk 1: setup
knitr::opts_chunk$set(fig.align="center", fig.width=6, fig.height=6, fig.path="Figs/", echo=TRUE, warning=FALSE, message=FALSE, cache=TRUE)
# Chunk 2
library(ade4);  library(tidyverse);  library(GGally)
# Chunk 3
CatAus = read.csv("../data/Pet Cats Australia.csv"
, stringsAsFactors = T)
CatUS = read.csv("../data/Pet Cats United States.csv"
, stringsAsFactors = T)
CatUK = read.csv("../data/Pet Cats United Kingdom.csv"
, stringsAsFactors = T)
CatNZ = read.csv("../data/Pet Cats New Zealand.csv"
, stringsAsFactors = T)
# Chunk 4
summary(CatAus)
summary(CatUS)
summary(CatUK)
summary(CatNZ)
# Chunk 5
CatAus = subset.data.frame(CatAus,
select = c("event.id","visible","timestamp","sensor.type","location.long","location.lat",
"algorithm.marked.outlier","manually.marked.outlier","individual.taxon.canonical.name",
"tag.local.identifier","individual.local.identifier","study.name"))
CatUS = subset.data.frame(CatUS,
select = c("event.id","visible","timestamp","sensor.type","location.long","location.lat",
"algorithm.marked.outlier","manually.marked.outlier","individual.taxon.canonical.name",
"tag.local.identifier","individual.local.identifier","study.name"))
CatUK = subset.data.frame(CatUK,
select = c("event.id","visible","timestamp","sensor.type","location.long","location.lat",
"algorithm.marked.outlier","manually.marked.outlier","individual.taxon.canonical.name",
"tag.local.identifier","individual.local.identifier","study.name"))
CatNZ = subset.data.frame(CatNZ,
select = c("event.id","visible","timestamp","sensor.type","location.long","location.lat",
"algorithm.marked.outlier","manually.marked.outlier","individual.taxon.canonical.name",
"tag.local.identifier","individual.local.identifier","study.name"))
# Chunk 6
CatComplet = merge.data.frame(CatAus, CatUS,
all.x = T, all.y= T)
CatComplet = merge.data.frame(CatComplet, CatUK,
all.x = T, all.y= T)
CatComplet = merge.data.frame(CatComplet, CatNZ,
all.x = T, all.y= T)
head(which(CatComplet$algorithm.marked.outlier != ""))
CatCompletwoOutliers = subset.data.frame(CatComplet, CatComplet$manually.marked.outlier != "true")
# si on fait confiance a leur algo ajouter : & CatComplet$algorithm.marked.outlier != "true"
# Chunk 7
unique(CatCompletwoOutliers$algorithm.marked.outlier);  unique(CatCompletwoOutliers$manually.marked.outlier)
# Chunk 8
CatCompletwoOutliers = subset.data.frame(CatCompletwoOutliers,
select = c("location.long","location.lat","timestamp",
"tag.local.identifier","study.name"))
# Chunk 9
summary(CatCompletwoOutliers)
unique(CatCompletwoOutliers$study.name)
# Chunk 10
par(mfrow = c(1,2))
plot(study.name~location.long+location.lat
, data = CatCompletwoOutliers,
col = c("red3","salmon2","blue4","coral4"))
View(CatCompletwoOutliers)
